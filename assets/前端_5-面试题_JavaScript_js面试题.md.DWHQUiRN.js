import{_ as s,o as i,c as e,a2 as n}from"./chunks/framework.DaWjvruP.js";const o=JSON.parse(`{"title":"js 面试题","description":"","frontmatter":{},"headers":[{"level":2,"title":"原型和原型链","slug":"原型和原型链","link":"#原型和原型链","children":[]},{"level":2,"title":"作用域链","slug":"作用域链","link":"#作用域链","children":[]},{"level":2,"title":"['1','2','3'].map(parseInt)的返回值是什么","slug":"_1-2-3-map-parseint-的返回值是什么","link":"#_1-2-3-map-parseint-的返回值是什么","children":[]}],"relativePath":"前端/5-面试题/JavaScript/js面试题.md","filePath":"前端/5-面试题/JavaScript/js面试题.md"}`),t={name:"前端/5-面试题/JavaScript/js面试题.md"};function r(l,a,p,h,d,k){return i(),e("div",null,a[0]||(a[0]=[n(`<h1 id="js-面试题" tabindex="-1">js 面试题 <a class="header-anchor" href="#js-面试题" aria-label="Permalink to &quot;js 面试题&quot;">​</a></h1><h2 id="原型和原型链" tabindex="-1"><a href="./../../2-原生/js相关/原型和原型链.html">原型和原型链</a> <a class="header-anchor" href="#原型和原型链" aria-label="Permalink to &quot;[原型和原型链](../../2-原生/js相关/原型和原型链.md)&quot;">​</a></h2><h2 id="作用域链" tabindex="-1"><a href="./../../2-原生/js相关/作用域链.html">作用域链</a> <a class="header-anchor" href="#作用域链" aria-label="Permalink to &quot;[作用域链](../../2-原生/js相关/作用域链.md)&quot;">​</a></h2><h2 id="_1-2-3-map-parseint-的返回值是什么" tabindex="-1">[&#39;1&#39;,&#39;2&#39;,&#39;3&#39;].map(parseInt)的返回值是什么 <a class="header-anchor" href="#_1-2-3-map-parseint-的返回值是什么" aria-label="Permalink to &quot;[&#39;1&#39;,&#39;2&#39;,&#39;3&#39;].map(parseInt)的返回值是什么&quot;">​</a></h2><p>答案：<code>[1, NaN, NaN]</code></p><blockquote><p><strong>解析:</strong><br> 数组的<code>map</code>方法,接受三个参数，(当前值，当前索引，当前数组)<br><code>parseInt</code>解析一个字符串并返回指定基数的十进制整数,接受两个参数<code>parseInt(string,radix)</code><em>(需要转换的字符串，基数(取值范围为 2~36))</em><br> 于是，<code>[&#39;1&#39;,&#39;2&#39;,&#39;3&#39;].map(parseInt)</code>等价于：</p></blockquote><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> parseInt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(item, index)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//  parseInt(&#39;1&#39;, 0)  1  radix为0，设置为默认值10</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//  parseInt(&#39;2&#39;, 1)  NaN  radix小于2或大于36，直接返回NaN</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//  parseInt(&#39;3&#39;, 2)  NaN 二进制是用1和0来表示的书，3不是指定 radix 参数中的数字，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//	                      忽略该字符以及所有后续字符,返回NaN</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>参考文章 MDN: <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/parseInt" target="_blank" rel="noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/parseInt</a><br> 博文: <a href="https://segmentfault.com/a/1190000010520302" target="_blank" rel="noreferrer">https://segmentfault.com/a/1190000010520302</a><br> ECMAScript 原解析: <a href="https://262.ecma-international.org/6.0/#sec-parseint-string-radix" target="_blank" rel="noreferrer">https://262.ecma-international.org/6.0/#sec-parseint-string-radix</a></p>`,8)]))}const m=s(t,[["render",r]]);export{o as __pageData,m as default};
