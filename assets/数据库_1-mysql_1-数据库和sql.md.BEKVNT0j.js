import{_ as i,o as a,c as l,a2 as n}from"./chunks/framework.DaWjvruP.js";const e="/notes/assets/1704523844296.BMPuqIpo.jpg",t="/notes/assets/1704524692537.DcHtOpvB.png",p="/notes/assets/1704525219513.DzTataFY.png",u=JSON.parse('{"title":"数据库和SQL","description":"","frontmatter":{},"headers":[{"level":2,"title":"什么是数据库","slug":"什么是数据库","link":"#什么是数据库","children":[{"level":3,"title":"为什么用DBMS管理数据","slug":"为什么用dbms管理数据","link":"#为什么用dbms管理数据","children":[]},{"level":3,"title":"DBMS的种类","slug":"dbms的种类","link":"#dbms的种类","children":[]}]},{"level":2,"title":"数据库结构","slug":"数据库结构","link":"#数据库结构","children":[{"level":3,"title":"RDBMS的常见系统结构","slug":"rdbms的常见系统结构","link":"#rdbms的常见系统结构","children":[]},{"level":3,"title":"通过网络可以实现多个哭护短访问同一个数据库","slug":"通过网络可以实现多个哭护短访问同一个数据库","link":"#通过网络可以实现多个哭护短访问同一个数据库","children":[]},{"level":3,"title":"表的结构","slug":"表的结构","link":"#表的结构","children":[]}]},{"level":2,"title":"SQL概要","slug":"sql概要","link":"#sql概要","children":[{"level":3,"title":"标准SQL","slug":"标准sql","link":"#标准sql","children":[]},{"level":3,"title":"SQL语句及其种类","slug":"sql语句及其种类","link":"#sql语句及其种类","children":[]},{"level":3,"title":"SQL的基本书写规则","slug":"sql的基本书写规则","link":"#sql的基本书写规则","children":[]},{"level":3,"title":"SQL的注释","slug":"sql的注释","link":"#sql的注释","children":[]}]},{"level":2,"title":"表的创建","slug":"表的创建","link":"#表的创建","children":[{"level":3,"title":"数据库创建","slug":"数据库创建","link":"#数据库创建","children":[]},{"level":3,"title":"表的创建","slug":"表的创建-1","link":"#表的创建-1","children":[{"level":4,"title":"命名规则","slug":"命名规则","link":"#命名规则","children":[]},{"level":4,"title":"数据类型的指定","slug":"数据类型的指定","link":"#数据类型的指定","children":[]},{"level":4,"title":"约束设置","slug":"约束设置","link":"#约束设置","children":[]}]}]},{"level":2,"title":"表的删除和更新","slug":"表的删除和更新","link":"#表的删除和更新","children":[{"level":3,"title":"表的删除(DROP TABLE语句)","slug":"表的删除-drop-table语句","link":"#表的删除-drop-table语句","children":[]},{"level":3,"title":"表的更新(ALTER TABLE语句)","slug":"表的更新-alter-table语句","link":"#表的更新-alter-table语句","children":[]},{"level":3,"title":"插入数据","slug":"插入数据","link":"#插入数据","children":[]}]},{"level":2,"title":"变更表名","slug":"变更表名","link":"#变更表名","children":[]}],"relativePath":"数据库/1-mysql/1-数据库和sql.md","filePath":"数据库/1-mysql/1-数据库和sql.md"}'),h={name:"数据库/1-mysql/1-数据库和sql.md"};function k(r,s,d,E,c,g){return a(),l("div",null,s[0]||(s[0]=[n('<h1 id="数据库和sql" tabindex="-1">数据库和SQL <a class="header-anchor" href="#数据库和sql" aria-label="Permalink to &quot;数据库和SQL&quot;">​</a></h1><h2 id="什么是数据库" tabindex="-1">什么是数据库 <a class="header-anchor" href="#什么是数据库" aria-label="Permalink to &quot;什么是数据库&quot;">​</a></h2><p>通过计算机加工而成的可以进行高效访问的数据集合称为<strong>数据库</strong> (Database,DB)。</p><p>用来管理数据库的计算机系统称为<strong>数据管理系统</strong>(Database Management System,DBMS)</p><h3 id="为什么用dbms管理数据" tabindex="-1">为什么用DBMS管理数据 <a class="header-anchor" href="#为什么用dbms管理数据" aria-label="Permalink to &quot;为什么用DBMS管理数据&quot;">​</a></h3><ul><li>无法多人共享数据</li><li>无法提供操作大量数据所需的格式</li><li>实现读写自动化需要编程能力</li><li>无法应对突发事故</li></ul><h3 id="dbms的种类" tabindex="-1">DBMS的种类 <a class="header-anchor" href="#dbms的种类" aria-label="Permalink to &quot;DBMS的种类&quot;">​</a></h3><ul><li>层次数据库(Hierarchical Database,HDB),最古老的数据库之一，它把数据通过层次结构(树形结构)的方式表现出来(目前很少使用)</li><li>关系数据库(Relational Database,RDB),关系数据库是现在应用最广泛的数据库。在1969年诞生，采用<strong>由行和列组成的二维表来管理数据</strong>，简单易懂。同时，它还使用专门的 <code>SQL</code> (Structured Query Language,结构化查询语言)对数据进行操作 这种类型的 <code>DBMS</code> 称为关系型数据库管理系统(Relational Database Management System,RDBMS),比较具有代表性的RDBMS有5种 <ul><li>Oracle Database : 甲骨文公司的RDBMS,简称为Oracle</li><li>SQL Server : 微软公司的RDBMS</li><li>DB2 : IBM公司的RDBMS</li><li>PostgreSQL : 开源的RDBMS</li><li>Mysql : 开源的RDBMS</li></ul></li><li>面向对象数据库(Object Oriented Database,OODB),编程语言当中有一种被称为对象语言的语言。把数据以及对数据的操作集合起来以对象为单位进行管理，因此得名。面向对象数据库就是用来保存这些对象的数据库</li><li>XML数据库(XML Database,XMLDB),XML数据库可以对XML形式的大量数据进行高速处理</li><li>键值存储系统(Key-Value Store,KVS),这是一种单纯用来保存查询所使用的主键(Key)和值(Value)的组合的数据库。具有编程语言只是的读者可以把它想象成关联数组或者散列(hsah)</li></ul><h2 id="数据库结构" tabindex="-1">数据库结构 <a class="header-anchor" href="#数据库结构" aria-label="Permalink to &quot;数据库结构&quot;">​</a></h2><h3 id="rdbms的常见系统结构" tabindex="-1">RDBMS的常见系统结构 <a class="header-anchor" href="#rdbms的常见系统结构" aria-label="Permalink to &quot;RDBMS的常见系统结构&quot;">​</a></h3><p>使用RBDMS时，最常见的系统结构就是<strong>客户端/服务器类型(C/S类型)，如下图</strong></p><p><img src="'+e+'" alt="1704523844296"></p><p><strong>服务器</strong>指得是用来接收其他程序发出的请求，并对该请求进行相应处理的程序(软件)，或者是安装了此类程序的设备(计算机)。在计算机上持续执行处理，并等待接收吓一跳请求。RDBMS也是一种服务器，它能够从保存在硬盘上的<strong>数据库</strong>中读取数据并返回，还可以把数据变更为指定内容</p><p>与之相对，向服务器发出请求的程序(软件)，或者是安装了该程序的设备(计算机)称为<strong>客户端</strong>。访问RDBMS管理的数据库，进行数据读写的程序称为RDBMS客户端。RDBMS客户端将想要获取什么样的数据，或者想对那安歇数据进行何种变更等信息通过<strong>SQL语句</strong>发送给RDBMS服务器。RDBMS根据该域的内容返回所请求的数据，或者对存储在数据库中数据进行更新</p><p>客户端就如同委托方，而服务器就像是受托方。由于两者关系类似收拖放这姓委托方发出的指令，故而得名</p><h3 id="通过网络可以实现多个哭护短访问同一个数据库" tabindex="-1">通过网络可以实现多个哭护短访问同一个数据库 <a class="header-anchor" href="#通过网络可以实现多个哭护短访问同一个数据库" aria-label="Permalink to &quot;通过网络可以实现多个哭护短访问同一个数据库&quot;">​</a></h3><p><img src="'+t+'" alt="1704524692537"></p><p>客户端没有必要使用同样的程序，只要能将SQL发送给RDBMS，就可以操作数据库了，并且，多个客户端还可以同时对同一个数据库进行读写操作。</p><p>另外，RDBMS除了需要同时接收多个客户端的请求之外，还需要操作存有大量数据的数据库，因此通常都会安装在比客户端性能更优越的计算机上。擦没做数据量特别巨大的数据库时，还可以将多台计算机组合使用</p><h3 id="表的结构" tabindex="-1">表的结构 <a class="header-anchor" href="#表的结构" aria-label="Permalink to &quot;表的结构&quot;">​</a></h3><p>关系数据库通过类似Excel工作表那样的、由行和列组成的二维表来管理数据。用来管理数据的二维表在关系数据库中简称为<strong>表</strong></p><p>表存储在由RDBMS管理的数据库中，一个数据库中可以存储多个表</p><p><img src="'+p+`" alt="1704525219513"></p><p>根据SQL语句的内容返回的数据同样必须时二维表的形式，这也是关系数据库的特征之一。返回结果如果不是二维表的SQL语句则无法执行</p><p>表的列(垂直方向)称为字段，它代表了保存在表中的数据项目。</p><p>表的行(水平方向)称为记录，它相当于一条数据</p><p>行和列交汇的方格称为单元格。一个单元格中只能输入一个数据</p><p>ps : 关系数据库必须以行为单位进行数据读写</p><h2 id="sql概要" tabindex="-1">SQL概要 <a class="header-anchor" href="#sql概要" aria-label="Permalink to &quot;SQL概要&quot;">​</a></h2><h3 id="标准sql" tabindex="-1">标准SQL <a class="header-anchor" href="#标准sql" aria-label="Permalink to &quot;标准SQL&quot;">​</a></h3><p>国际标准化组织(ISO)为SQL制定了相应的标准，以此为基准的SQL称为<strong>标准SQL</strong></p><p>学会标准SQL就可以在各种RDBMS中书写SQL语句了</p><h3 id="sql语句及其种类" tabindex="-1">SQL语句及其种类 <a class="header-anchor" href="#sql语句及其种类" aria-label="Permalink to &quot;SQL语句及其种类&quot;">​</a></h3><p>SQL用关键字、表名、列名等组合而成的一条语句(SQL语句)来描述操作的内容</p><p>关键字是指哪些含义或使用方法已事先定义好的英语单词，存在包含”对表进行查询“或者“参考这个表”等各种意义的关键字</p><p>SQL语句可以分为以下三类，其中使用最多的DML</p><ul><li><p>DDL DDL(Data Definition Language,数据定义语言)用来创建或者删除存储数据用的数据库以及数据库中的表等对象。DDL包含以下几种指令</p><ul><li>CREATE : 创建数据库和表等对象</li><li>DROP : 删除数据库和表等对象</li><li>ALTER : 修改数据库和表等对象的结构</li></ul></li><li><p>DML</p><p>DML(Data Manipulation Language, 数据操纵语言)用来查询或者变更表中的记录。DML包含以下几种指令</p><ul><li>SELECT : 查询表中的数据</li><li>INSERT : 向表中插入新数据</li><li>UPDATE : 更新表中的数据</li><li>DELETE : 删除表中的数据</li></ul></li><li><p>DCL</p><p>DCL(Data Control Language,数据控制语言)用来确认或者取消对数据库中的数据进行的变更。除此之外，还可以对RDBMS的用户是否由权限操作数据库中的对象(数据库表等)进行设定。DCL包含以下几种指定指令</p><ul><li>COMMIT : 确认对数据库中的数据进行的变更</li><li>ROLLBACK : 取消对数据库中的数据进行的变更</li><li>GRANT : 赋予用户操作权限</li><li>REVEKE : 取消用户的操作权限</li></ul></li></ul><h3 id="sql的基本书写规则" tabindex="-1">SQL的基本书写规则 <a class="header-anchor" href="#sql的基本书写规则" aria-label="Permalink to &quot;SQL的基本书写规则&quot;">​</a></h3><ul><li><p>SQL语句要以分号( ; )结尾</p></li><li><p>SQL语句不区分大小写，为了理解起来更加容易，可遵循以下规则来书写</p><ul><li>关键字大写</li><li>表名的首字母大写</li><li>其余(列名等)小写</li></ul></li><li><p>常数的书写方式时固定的，如字符串(&#39;abc&#39;)、日期(&#39;26 Jan 2010&#39; 或者 &#39;10/01/26&#39; 等)、数字(1000)等</p></li><li><p>单词需要用半角空格或者换行来分隔</p></li></ul><h3 id="sql的注释" tabindex="-1">SQL的注释 <a class="header-anchor" href="#sql的注释" aria-label="Permalink to &quot;SQL的注释&quot;">​</a></h3><p>注释是 SQL 语句中用来标识说明或者注意事项的部分，注释对SQL的执行没有任何影响，无论是英文字母还是汉字都可以随意使用</p><p>注释的书写方法由两种</p><ul><li>1行注释 书写在 <code>--</code>之后，只能写在同一行<div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 本SELECT语句会从结果中删除重复行。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT DISTINCT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> product_id, purchase_price</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Product;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li>多行注释 书写在 <code>/*</code>和 <code>*/</code>之间，可以跨多行<div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 本SELECT语句，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 会从结果中删除重复行。*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT DISTINCT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> product_id, purchase_price</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Product;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li></ul><h2 id="表的创建" tabindex="-1">表的创建 <a class="header-anchor" href="#表的创建" aria-label="Permalink to &quot;表的创建&quot;">​</a></h2><h3 id="数据库创建" tabindex="-1">数据库创建 <a class="header-anchor" href="#数据库创建" aria-label="Permalink to &quot;数据库创建&quot;">​</a></h3><p>在创建表之前，要先创建用来存储表的数据库。运行 <code>CREATE DATABASE</code> 语句就可以在RDBMS上创建数据库了。语法如下：</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> DATABASE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">数据库名称</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>例如，创建数据库 <code>shop</code></p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DATEBASE shop;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="表的创建-1" tabindex="-1">表的创建 <a class="header-anchor" href="#表的创建-1" aria-label="Permalink to &quot;表的创建&quot;">​</a></h3><p>创建好数据库之后，接下来我们使用 <code>CREATE TABLE</code> 语句在其中创建表，语法如下：</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">表名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">列名1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">数据类型</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">该列所需约束</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">列名2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">数据类型</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">该列所需约束</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">列名3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">数据类型</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">该列所需约束</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">列名4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">数据类型</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">该列所需约束</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">该表的约束1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">该表的约束2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>该语法清楚地描述了我们要创建一个包含 <code>&lt;列名1&gt;</code>、<code>&lt;列名2&gt;</code>、······的名称为&lt;表名&gt;的表，非常容易理解。每一列的数据类型是必须要指定的，还要为需要的列设置约束。约束可以在定义列的时候进行设置，也可以在语句的末尾进行设置</p><p>例如，在数据库中创建商品表(product表)</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Product</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(product_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> product_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> product_type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sale_price </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INTEGER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> purchase_price </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INTEGER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> regist_date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (product_id));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="命名规则" tabindex="-1">命名规则 <a class="header-anchor" href="#命名规则" aria-label="Permalink to &quot;命名规则&quot;">​</a></h4><ul><li>我们<strong>只能使用半角英文字母、数字、下划线( _ )作为数据库、表和列的名称</strong>。例如，不能将 <code>product_id </code>写成 <code>product-id</code>，因为标准SQL并不允许使用连字符作为列名等名称。$、#、?这样的符号同样不能作为名称使用</li><li><strong>名称必须以半角英文字母开头</strong>。以符号开头的名称(类似1product))并不多见，在标准SQL中是被禁止的</li><li>在同一个数据库中不能创建两个相同名称的表，在同一个表中也不能创建两个名称相同的列</li></ul><h4 id="数据类型的指定" tabindex="-1">数据类型的指定 <a class="header-anchor" href="#数据类型的指定" aria-label="Permalink to &quot;数据类型的指定&quot;">​</a></h4><p>Product表所包含的列，定义在 <code>CREATE TABLE Product ( )</code> 的括号中。列名右边的 <code>INTEGER</code> 或者 <code>char</code> 等关键字，是用来声明该列的数据类型的，所有列都必须指定数据类型</p><p>数据类型表示数据的种类，包括数字型、字符型和日期型等。每一列都不能存储与该列数据类型不符的数据。声明为整数型的列中不能存在‘abc’这样的字符串，声明为字符型的列中也不能存储1234这样的数字</p><p>以下是四种基本的数据类型：</p><ul><li>INTEGER型，用来指定存储整数的列的数据类型(数字型),不能存储小数</li><li>CHAR型，CHAR是CHARACTER(字符)的缩写，是用来指定存储字符串的列的数据类型(字符串)。在括号中指定该列可以存储的字符串长度(最大长度)(CHAR(20))。字符串超出最大长度的部分是无法输入到该列中的</li><li>VARCHAR型，VARCHAR也是用来指定存储字符串的列的数据类型(字符串类型)，也可以通过括号内的数字来指定字符串的长度，但该类型的列是以<strong>可变长字符串</strong> 的形式来保存字符串的。定长字符串在字符数未达到最大长度时会用半角空格补足，但可变长字符即使未达到最大长度，也不会用半角空格补足，例如向VARCHAR(8)类型的列中输入字符串&#39;abc&#39;的时候，保存的就是字符串&#39;abc&#39;</li><li>DATE型，用来指定存储日期(年月日)的列的数据类型(日期型)</li></ul><h4 id="约束设置" tabindex="-1">约束设置 <a class="header-anchor" href="#约束设置" aria-label="Permalink to &quot;约束设置&quot;">​</a></h4><p>约束是除了数据类型之外，对列中存储的数据进行限制或者追加条件的功能。、</p><p>Product表中设置了两种约束</p><ul><li><p>数据类型的右侧设置了 <code>NOT NULL</code>约束。NULL是代表空白的关键字。在NULL之前加上了表示否定的NOT，就是给该列设置了不能输入空白，也就是必须输入数据的约束(如果什么都不输入就会出错)</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">product_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">product_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">product_type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>另外，在 <code>CREATE TABLE</code> 语句后面，还有 <code>PRIMARY KEY (product_id)</code>,这是来给product_id列设置<strong>主键约束</strong> 的，主键(primary key)就是可以特定一行数据的列。也就是说，如果把product_id列指定为主键，就可以通过该列取出特定的商品数据了</p></li></ul><h2 id="表的删除和更新" tabindex="-1">表的删除和更新 <a class="header-anchor" href="#表的删除和更新" aria-label="Permalink to &quot;表的删除和更新&quot;">​</a></h2><h3 id="表的删除-drop-table语句" tabindex="-1">表的删除(DROP TABLE语句) <a class="header-anchor" href="#表的删除-drop-table语句" aria-label="Permalink to &quot;表的删除(DROP TABLE语句)&quot;">​</a></h3><p>删除表使用SQL语句 <code>DROP TABLE</code> 即可。语法如下</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DROP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">表名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>例如，删除表Product表</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DROP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Product;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="表的更新-alter-table语句" tabindex="-1">表的更新(ALTER TABLE语句) <a class="header-anchor" href="#表的更新-alter-table语句" aria-label="Permalink to &quot;表的更新(ALTER TABLE语句)&quot;">​</a></h3><p>把表创建出来后发现少了几列，这是无需把表删除再重新创建，只需使用变更表定义的 <code>ALTER TABLE</code> 就可以了，语法如下</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">表名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ADD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> COLUMN </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">列的定义</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> -- 添加列</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">表名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> DROP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> COLUMN </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">列名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> -- 删除列</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>例如，我们可以在Product中进行添加列和删除列的操作</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">--添加product_name_pinyin </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Product </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ADD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> COLUMN product_name_pinyin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">--删除product_name_pinyin </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Product </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DROP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> COLUMN product_name_pinyin</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="插入数据" tabindex="-1">插入数据 <a class="header-anchor" href="#插入数据" aria-label="Permalink to &quot;插入数据&quot;">​</a></h3><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">表名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (数据1,...)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="变更表名" tabindex="-1">变更表名 <a class="header-anchor" href="#变更表名" aria-label="Permalink to &quot;变更表名&quot;">​</a></h2><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">--oracle|postgroSQL</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Poduct RENAME </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Product;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">--DB2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RENAME </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Poduct </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Product;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">--SQL Server</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sp_rename </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Poduct&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Product&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">--MySQL</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RENAME </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Poduct </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Product;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>通常在 RENAME 之后按照 &lt; 变更前的名称 &gt;、&lt; 变更后的名称 &gt; 的顺序来指 定表的名称。 各个数据库的语法都不尽相同，是因为标准 SQL 并没有 RENAME，于是各个 数据库便使用了各自惯用的语法。如上所述，在创建了错误的表名，或者想要保 存表的备份时，使用这些语句非常方便。但美中不足的是，由于各个数据库的语 法不同，很难一下子想出恰当的指令</p>`,82)]))}const b=i(h,[["render",k]]);export{u as __pageData,b as default};
