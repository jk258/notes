import{_ as i,c as a,a2 as e,o as l}from"./chunks/framework.D-H4MxKu.js";const c=JSON.parse('{"title":"数据更新","description":"","frontmatter":{},"headers":[{"level":2,"title":"数据的插入（INSERT)","slug":"数据的插入-insert","link":"#数据的插入-insert","children":[{"level":3,"title":"什么是INSERT","slug":"什么是insert","link":"#什么是insert","children":[]},{"level":3,"title":"INSERT 语句的基本语法","slug":"insert-语句的基本语法","link":"#insert-语句的基本语法","children":[]},{"level":3,"title":"插入默认值","slug":"插入默认值","link":"#插入默认值","children":[]},{"level":3,"title":"从其他表中复制数据","slug":"从其他表中复制数据","link":"#从其他表中复制数据","children":[]}]},{"level":2,"title":"数据的删除(DELETE)","slug":"数据的删除-delete","link":"#数据的删除-delete","children":[{"level":3,"title":"DELETE语句的基本语法","slug":"delete语句的基本语法","link":"#delete语句的基本语法","children":[]},{"level":3,"title":"指定删除对象的DELETE语句(搜索型DELETE)","slug":"指定删除对象的delete语句-搜索型delete","link":"#指定删除对象的delete语句-搜索型delete","children":[]}]},{"level":2,"title":"数据的更新","slug":"数据的更新","link":"#数据的更新","children":[{"level":3,"title":"指定条件的UPDATE语句(搜索型UPDATE)","slug":"指定条件的update语句-搜索型update","link":"#指定条件的update语句-搜索型update","children":[]},{"level":3,"title":"使用NULL进行更新","slug":"使用null进行更新","link":"#使用null进行更新","children":[]},{"level":3,"title":"多列更新","slug":"多列更新","link":"#多列更新","children":[]}]},{"level":2,"title":"事务","slug":"事务","link":"#事务","children":[{"level":3,"title":"什么是事务","slug":"什么是事务","link":"#什么是事务","children":[]},{"level":3,"title":"创建事务","slug":"创建事务","link":"#创建事务","children":[]},{"level":3,"title":"ACID特性","slug":"acid特性","link":"#acid特性","children":[]}]}],"relativePath":"数据库/1-mysql/4-数据更新.md","filePath":"数据库/1-mysql/4-数据更新.md"}'),n={name:"数据库/1-mysql/4-数据更新.md"};function t(p,s,h,k,d,r){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="数据更新" tabindex="-1">数据更新 <a class="header-anchor" href="#数据更新" aria-label="Permalink to &quot;数据更新&quot;">​</a></h1><h2 id="数据的插入-insert" tabindex="-1">数据的插入（INSERT) <a class="header-anchor" href="#数据的插入-insert" aria-label="Permalink to &quot;数据的插入（INSERT)&quot;">​</a></h2><h3 id="什么是insert" tabindex="-1">什么是INSERT <a class="header-anchor" href="#什么是insert" aria-label="Permalink to &quot;什么是INSERT&quot;">​</a></h3><p>通过 <code>CREATE TABLE</code>语句创建出来的表，可以被认为是一个空空如也的箱子。只有把数据装入到这个箱子后，它才能称为数据库。又来装入数据的SQL就是 <code>INSERT</code>(插入)</p><h3 id="insert-语句的基本语法" tabindex="-1">INSERT 语句的基本语法 <a class="header-anchor" href="#insert-语句的基本语法" aria-label="Permalink to &quot;INSERT 语句的基本语法&quot;">​</a></h3><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">表名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (列1,列2,列3......) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (值1,值2,值3......)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如下，向表ProductIns插入一行数据</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ProductIns (product_id,product_name,product_type,sale_price,purchase_price,regist_date)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1000&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;T恤衫&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;衣服&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2009-09-20&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>原则上，执行一次 <code>INSERT</code>语句会插入一行数据。但是，但是很多 RDBMS 都支持一次插入多行数据，这样的功能称为<strong>多行 INSERT</strong>。如下：</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ProductIns </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;0002&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;打孔器&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;办公用品&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">320</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2009-09-11&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 	(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;0003&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;运动T恤&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;衣服&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 	(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;0004&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;菜刀&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;厨房用具&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2009-09-20&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>注意：</p><ul><li>对表进行全列 <code>INSERT</code>时，可以省略表名后的列清单。这时 <code>VALUES</code>子句的值会默认按照从左到右的顺序赋给每一列</li><li><code>INSESRT</code>语句中想给某一列赋予 <code>NULL</code>值时，可以直接在 <code>VALUES</code>子句的值清单中写入 <code>NULL</code>。但是，想要插入 <code>NULL</code>的列一定不能设置 <code>NOT NULL</code>约束。</li></ul><h3 id="插入默认值" tabindex="-1">插入默认值 <a class="header-anchor" href="#插入默认值" aria-label="Permalink to &quot;插入默认值&quot;">​</a></h3><p>可以通过在创建表的 <code>CREATE RABLE</code>语句中设置 <code>DEFAULT</code>约束来设定默认值</p><p>如果在创建表的同时设定了默认值，就可以在 <code>INSERT</code>语句中自动为列赋值了。默认值的使用方法通常由显式和隐式两种</p><ul><li><p>通过显式方法插入默认值</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ProductIns (product_id,product_name,product_type,sale_price,purchase_price,regist_date) </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;0007&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;擦菜板&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;厨房用具&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DEFAULT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">790</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2009-04-28&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>这样一来，RDBMS 就会在插入记录时自动把默认值赋给对应的列</p></li><li><p>通过隐式方法插入默认值 插入默认值时也可以不使用 <code>DEFAULT</code>关键字，只要在列清单和 <code>VALUES</code>中省略设定了默认值的列就可以了</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ProductIns (product_id,product_name,product_type,purchase_price,regist_date) </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;0008&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;擦菜板&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;厨房用具&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">790</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2009-04-28&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ul><p>ps：实际使用中建议使用显式的方法。如果省略了没有设定默认值的列，该列的值就会被设定为 <code>NULL</code></p><h3 id="从其他表中复制数据" tabindex="-1">从其他表中复制数据 <a class="header-anchor" href="#从其他表中复制数据" aria-label="Permalink to &quot;从其他表中复制数据&quot;">​</a></h3><p>要插入数据，除了使用 <code>VALUES</code>子句指定具体的数据之外，还可以从其他表中复制数据</p><p>如下，将表Product中的数据复制到表ProductCopy中</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ProductCopy (product_id,product_name,product_type,sale_price,purchase_price,regist_date) </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> product_id,product_name,product_type,sale_price,purchase_price,regist_date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Product</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>执行该 <code>INSERT ... SELECT</code>语句时，如果原来Product表中由 8 行数据，那么ProductCopy表中也会插入完全相同的8行数据。当然Product表中的原有数据不会发生改变</p><p>该 <code>INSERT</code>语句中的 <code>SELECT</code>语句，也可以使用 <code>WHERE</code>子句或者 <code>GROUP BY</code>子句，但使用 <code>ORDER BY</code>子句并不会产生任何效果</p><h2 id="数据的删除-delete" tabindex="-1">数据的删除(DELETE) <a class="header-anchor" href="#数据的删除-delete" aria-label="Permalink to &quot;数据的删除(DELETE)&quot;">​</a></h2><p>删除数据的方法可以分为以下两种：</p><ul><li><code>DROP TABLE</code>语句可以将表完全删除</li><li><code>DELETE</code>语句会留下表（容器），而删除表中的全部数据</li></ul><h3 id="delete语句的基本语法" tabindex="-1">DELETE语句的基本语法 <a class="header-anchor" href="#delete语句的基本语法" aria-label="Permalink to &quot;DELETE语句的基本语法&quot;">​</a></h3><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DELETE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">表名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>例如，删除Product表中的全部数据</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DELETE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Product</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>DELETE语句的删除对象并不是表或者列，而是记录（行）</p><h3 id="指定删除对象的delete语句-搜索型delete" tabindex="-1">指定删除对象的DELETE语句(搜索型DELETE) <a class="header-anchor" href="#指定删除对象的delete语句-搜索型delete" aria-label="Permalink to &quot;指定删除对象的DELETE语句(搜索型DELETE)&quot;">​</a></h3><p>想要删除部分数据行时，可以像 <code>SELECT</code>语句那样使用 <code>WHERE</code>子句指定删除条件。这种指定了删除对象的 <code>DELETE</code>语句称为 <code>搜索型DELETE</code></p><p>语法如下</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DELETE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">表名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> WHERE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">条件</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>例如：删除销售单价（sale_price）大于等于4000的数据</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DELETE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Product </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sale_price</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4000</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>WHERE</code>子句的书写方式与此前介绍的 <code>SELECT</code>语句一样</p><p>与 <code>SELECT</code>语句不同的是，<code>DELETE</code>语句中不能使用 <code>GROUP BY</code>、<code>HAVING</code>和 <code>ORDER BY</code>三类子句，而只能使用WHERE子句</p><p>标准SQL中用来从表中删除数据的只有 <code>DELETE</code>语句。但是很多数据库产品中还存在另外一种被称为 <code>TRUNCATE</code>的语句。这些产品主要包括Oracle、SQL Server、PostgreSQL、MySql和DB2，语法如下</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TRUNCATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">表名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>TRUNCATE</code>和 <code>DELETE</code>的不同</p><ul><li><code>TRUNCATE</code>只能删除表中的全部数据，而不能通过 <code>WHERE</code>子句指定条件来删除部分数据</li><li><code>TRUNCATE</code>因为不能具体地控制删除对象，所以其处理速度比<code>DELETE</code>要快的多</li></ul><h2 id="数据的更新" tabindex="-1">数据的更新 <a class="header-anchor" href="#数据的更新" aria-label="Permalink to &quot;数据的更新&quot;">​</a></h2><p>向表中插入数据后，想要再更改数据，并不需要把数据删除之后再重新插入，使用 <code>UPDATE</code>语句就可以改变表中的数据了。语法如下</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">UPDATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">表名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> SET</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">列名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">表达式</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>将更新对象的列和更新后的值都记述再 <code>SET</code>子句，例如，将表Product中的regist_Date的所有数据更新为“2019-10-10”</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Product </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> regist_date</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2019-10-10&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="指定条件的update语句-搜索型update" tabindex="-1">指定条件的UPDATE语句(搜索型UPDATE) <a class="header-anchor" href="#指定条件的update语句-搜索型update" aria-label="Permalink to &quot;指定条件的UPDATE语句(搜索型UPDATE)&quot;">​</a></h3><p>更新数据时也可以向 <code>DELETE</code>语句那样使用 <code>WHERE</code>子句。这种指定更新对象的 <code>UPDATE</code>语句称为搜索型 <code>UPDATE</code>语句。语法如下</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">UPDATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">表名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> SET</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">列名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;=&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">表达式</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> WHERE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">条件</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>例如，将商品种类为厨房用具的记录销售单价更新为原来的10倍</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Product </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sale_price </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sale_price</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> product_type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;厨房用具&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="使用null进行更新" tabindex="-1">使用NULL进行更新 <a class="header-anchor" href="#使用null进行更新" aria-label="Permalink to &quot;使用NULL进行更新&quot;">​</a></h3><p>使用 <code>UPDATE</code>也可以将列更新为 <code>NULL</code>，但是，只有未设置 <code>NOT NULL </code>约束和主键约束的列才可以清空为<code>NULL</code>如下</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Product</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> SET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> regist_date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> NULL</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> product_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;0008&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="多列更新" tabindex="-1">多列更新 <a class="header-anchor" href="#多列更新" aria-label="Permalink to &quot;多列更新&quot;">​</a></h3><p><code>UPDATE</code>语句的<code>SET</code>子句支持同时将多个列作为更新对象</p><p>例如，我们将销售单价（sale_price）更新为原来的 10 倍，同时将进货 单价（purchase_price）更新为原来的一半，</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Product </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sale_price </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sale_price</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,purchase_price</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">purchase_price</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> product_type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;厨房用具&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="事务" tabindex="-1">事务 <a class="header-anchor" href="#事务" aria-label="Permalink to &quot;事务&quot;">​</a></h2><h3 id="什么是事务" tabindex="-1">什么是事务 <a class="header-anchor" href="#什么是事务" aria-label="Permalink to &quot;什么是事务&quot;">​</a></h3><p>事务就是需要再同一个处理单元中执行的一系列更新处理的集合。一个事务中包含多少个更新处理或者包含哪些处理并没有固定的标准，而是根据用户的要求决定的</p><h3 id="创建事务" tabindex="-1">创建事务 <a class="header-anchor" href="#创建事务" aria-label="Permalink to &quot;创建事务&quot;">​</a></h3><p>使用事务开始语句和事务结束语句，将一系列DML语句(<code>INSERT/UPDATE/DELETE</code>)括起来，就实现了一个事务处理，语法如下</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">事务开始语句;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	DML语句1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	DML语句2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	DML语句3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	......</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">事务结束语句(COMMIT或者ROLLBACK)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>事务并没有标准的开始语句，在DBMS中有代表型的语法如下</p><ul><li>SQL Server、PostgreSQL <code>BEGIN TRANSACTION</code></li><li>MySQL <code>START TRANSACTION</code></li><li>Oracle、DB2 无</li></ul><p>如下，更新商品信息的事务</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">START TRANSACTION</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	-- 将运动T恤的销售单价降低1000日元</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Product </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sale_price</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sale_price</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> product_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;运动T恤&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	-- 将T恤衫的销售单价上浮1000日元</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Product </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sale_price</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sale_price</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> product_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;T恤衫&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COMMIT</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>事务的结束需要用户明确地给出提示。结束事务的指令有两种</p><ul><li>COMMIT——提交处理 COMMIT是提交事务包含的全部更新处理的结束指令，相当于文件处理中的覆盖保存。一旦提交，就无法恢复到事务开始前的状态了。因此在提交前一定要确认是否真的需要进行这些更新</li><li>ROLLBACK——取消处理 ROLLBACK是取消事务包含的全部更新处理的结束指令，相当于文件处理中的放弃保存。一旦回滚，数据库就会恢复到事务开始之前的状态，通常回滚并不会像提交那样造成大规模的数据损失</li></ul><h3 id="acid特性" tabindex="-1">ACID特性 <a class="header-anchor" href="#acid特性" aria-label="Permalink to &quot;ACID特性&quot;">​</a></h3><p>DBMS的事务都遵循四种特性，将这四种特性的首字母结合起来统称为ACID特性。这是所有DBMS都必须遵守的规则</p><ul><li>原子性（Atomicity） 原子性是指在事务结束时，其中所包含的更新处理要么全部执行，要么完全不执行，也就是要么占有一切要么一无所有。也就是说，如果用户在一个事务中定义了两条 <code>UPDATE</code>语句，DBMS肯定不会值执行一条，否则就会对业务处理造成影响</li><li>一致性（Consistency） 一致性指的是事务中包含的处理要满足数据库提前设置的约束，如主键约束或者 <code>NOT NULL</code>约束等，对事务来说，不合法的SQL会被回滚，（取消，不会执行）</li><li>隔离性（Isolation） 隔离性指的是保证不同事务之间互不干扰的特性。该特性保证了事务之间不会互相嵌套。此外，在某个事务中进行的更改，在该事务结束之前，对其他事务而言是不可见的</li><li>持久性（Durability） 持久性也可以称为耐久性，指的是在事务（不论是提交还是回滚）结束后，DBMS能够保证该时间点的数据状态会被保存的特性。即使由于系统故障导致数据丢失，数据库也一定能通过某种手段进行恢复 保证持久性的方法根据实现的不同而不同，其中最常见的就是将事务的执行记录保存到硬盘等存储介质中（该执行记录称为日志）。当发生故障时，可以通过日志恢复到故障发生前的状态</li></ul>`,75)]))}const o=i(n,[["render",t]]);export{c as __pageData,o as default};
