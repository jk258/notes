import{_ as a,c as o,o as s,ag as t}from"./chunks/framework.C-Bog4j8.js";const c=JSON.parse('{"title":"os 文件/目录方法","description":"","frontmatter":{},"headers":[{"level":2,"title":"os.access(path, mode)","slug":"os-access-path-mode","link":"#os-access-path-mode","children":[]},{"level":2,"title":"os.chdir(path)","slug":"os-chdir-path","link":"#os-chdir-path","children":[]},{"level":2,"title":"os.chflags(path, flags)","slug":"os-chflags-path-flags","link":"#os-chflags-path-flags","children":[]},{"level":2,"title":"os.chmod(path, mode)","slug":"os-chmod-path-mode","link":"#os-chmod-path-mode","children":[]},{"level":2,"title":"os.chown(path, uid, gid)","slug":"os-chown-path-uid-gid","link":"#os-chown-path-uid-gid","children":[]},{"level":2,"title":"os.chroot(path)","slug":"os-chroot-path","link":"#os-chroot-path","children":[]},{"level":2,"title":"os.close(fd)","slug":"os-close-fd","link":"#os-close-fd","children":[]},{"level":2,"title":"os.closerange(fd_low, fd_high)","slug":"os-closerange-fd-low-fd-high","link":"#os-closerange-fd-low-fd-high","children":[]},{"level":2,"title":"os.dup(fd)","slug":"os-dup-fd","link":"#os-dup-fd","children":[]},{"level":2,"title":"os.dup2(fd, fd2)","slug":"os-dup2-fd-fd2","link":"#os-dup2-fd-fd2","children":[]},{"level":2,"title":"os.fchdir(fd)","slug":"os-fchdir-fd","link":"#os-fchdir-fd","children":[]},{"level":2,"title":"os.fchmod(fd, mode)","slug":"os-fchmod-fd-mode","link":"#os-fchmod-fd-mode","children":[]},{"level":2,"title":"os.fchown(fd, uid, gid)","slug":"os-fchown-fd-uid-gid","link":"#os-fchown-fd-uid-gid","children":[]},{"level":2,"title":"os.fdatasync(fd)","slug":"os-fdatasync-fd","link":"#os-fdatasync-fd","children":[]},{"level":2,"title":"os.fdopen(fd[, mode[, bufsize]])","slug":"os-fdopen-fd-mode-bufsize","link":"#os-fdopen-fd-mode-bufsize","children":[]},{"level":2,"title":"os.fpathconf(fd, name)","slug":"os-fpathconf-fd-name","link":"#os-fpathconf-fd-name","children":[]},{"level":2,"title":"os.fstat(fd)","slug":"os-fstat-fd","link":"#os-fstat-fd","children":[]},{"level":2,"title":"os.fstatvfs(fd)","slug":"os-fstatvfs-fd","link":"#os-fstatvfs-fd","children":[]},{"level":2,"title":"os.fsync(fd)","slug":"os-fsync-fd","link":"#os-fsync-fd","children":[]},{"level":2,"title":"os.ftruncate(fd, length)","slug":"os-ftruncate-fd-length","link":"#os-ftruncate-fd-length","children":[]},{"level":2,"title":"os.getcwd()","slug":"os-getcwd","link":"#os-getcwd","children":[]},{"level":2,"title":"os.getcwdb()","slug":"os-getcwdb","link":"#os-getcwdb","children":[]},{"level":2,"title":"os.isatty(fd)","slug":"os-isatty-fd","link":"#os-isatty-fd","children":[]},{"level":2,"title":"os.lchflags(path, flags)","slug":"os-lchflags-path-flags","link":"#os-lchflags-path-flags","children":[]},{"level":2,"title":"os.lchmod(path, mode)","slug":"os-lchmod-path-mode","link":"#os-lchmod-path-mode","children":[]},{"level":2,"title":"os.lchown(path, uid, gid)","slug":"os-lchown-path-uid-gid","link":"#os-lchown-path-uid-gid","children":[]},{"level":2,"title":"os.link(src, dst)","slug":"os-link-src-dst","link":"#os-link-src-dst","children":[]},{"level":2,"title":"os.listdir(path)","slug":"os-listdir-path","link":"#os-listdir-path","children":[]},{"level":2,"title":"os.lseek(fd, pos, how)","slug":"os-lseek-fd-pos-how","link":"#os-lseek-fd-pos-how","children":[]},{"level":2,"title":"os.lstat(path)","slug":"os-lstat-path","link":"#os-lstat-path","children":[]},{"level":2,"title":"os.major(device)","slug":"os-major-device","link":"#os-major-device","children":[]},{"level":2,"title":"os.makedev(major, minor)","slug":"os-makedev-major-minor","link":"#os-makedev-major-minor","children":[]},{"level":2,"title":"os.makedirs(path[, mode])","slug":"os-makedirs-path-mode","link":"#os-makedirs-path-mode","children":[]},{"level":2,"title":"os.minor(device)","slug":"os-minor-device","link":"#os-minor-device","children":[]},{"level":2,"title":"os.mkdir(path[, mode])","slug":"os-mkdir-path-mode","link":"#os-mkdir-path-mode","children":[]},{"level":2,"title":"os.mkfifo(path[, mode])","slug":"os-mkfifo-path-mode","link":"#os-mkfifo-path-mode","children":[]},{"level":2,"title":"os.mknod(filename[, mode=0600, device])","slug":"os-mknod-filename-mode-0600-device","link":"#os-mknod-filename-mode-0600-device","children":[]},{"level":2,"title":"os.open(file, flags[, mode])","slug":"os-open-file-flags-mode","link":"#os-open-file-flags-mode","children":[]},{"level":2,"title":"os.openpty()","slug":"os-openpty","link":"#os-openpty","children":[]},{"level":2,"title":"os.pathconf(path, name)","slug":"os-pathconf-path-name","link":"#os-pathconf-path-name","children":[]},{"level":2,"title":"os.pipe()","slug":"os-pipe","link":"#os-pipe","children":[]},{"level":2,"title":"os.popen(command[, mode[, bufsize]])","slug":"os-popen-command-mode-bufsize","link":"#os-popen-command-mode-bufsize","children":[]},{"level":2,"title":"os.read(fd, n)","slug":"os-read-fd-n","link":"#os-read-fd-n","children":[]},{"level":2,"title":"os.readlink(path)","slug":"os-readlink-path","link":"#os-readlink-path","children":[]},{"level":2,"title":"os.remove(path)","slug":"os-remove-path","link":"#os-remove-path","children":[]},{"level":2,"title":"os.removedirs(path)","slug":"os-removedirs-path","link":"#os-removedirs-path","children":[]},{"level":2,"title":"os.rename(src, dst)","slug":"os-rename-src-dst","link":"#os-rename-src-dst","children":[]},{"level":2,"title":"os.renames(old, new)","slug":"os-renames-old-new","link":"#os-renames-old-new","children":[]},{"level":2,"title":"os.rmdir(path)","slug":"os-rmdir-path","link":"#os-rmdir-path","children":[]},{"level":2,"title":"os.stat(path)","slug":"os-stat-path","link":"#os-stat-path","children":[]},{"level":2,"title":"os.stat_float_times([newvalue])","slug":"os-stat-float-times-newvalue","link":"#os-stat-float-times-newvalue","children":[]},{"level":2,"title":"os.statvfs(path)","slug":"os-statvfs-path","link":"#os-statvfs-path","children":[]},{"level":2,"title":"os.symlink(src, dst)","slug":"os-symlink-src-dst","link":"#os-symlink-src-dst","children":[]},{"level":2,"title":"os.tcgetpgrp(fd)","slug":"os-tcgetpgrp-fd","link":"#os-tcgetpgrp-fd","children":[]},{"level":2,"title":"os.tcsetpgrp(fd, pg)","slug":"os-tcsetpgrp-fd-pg","link":"#os-tcsetpgrp-fd-pg","children":[]},{"level":2,"title":"os.ttyname(fd)","slug":"os-ttyname-fd","link":"#os-ttyname-fd","children":[]},{"level":2,"title":"os.unlink(path)","slug":"os-unlink-path","link":"#os-unlink-path","children":[]},{"level":2,"title":"os.utime(path, times)","slug":"os-utime-path-times","link":"#os-utime-path-times","children":[]},{"level":2,"title":"os.walk(top[, topdown=True[, onerror=None[, followlinks=False]]])","slug":"os-walk-top-topdown-true-onerror-none-followlinks-false","link":"#os-walk-top-topdown-true-onerror-none-followlinks-false","children":[]},{"level":2,"title":"os.write(fd, str)","slug":"os-write-fd-str","link":"#os-write-fd-str","children":[]},{"level":2,"title":"os.path 模块","slug":"os-path-模块","link":"#os-path-模块","children":[]},{"level":2,"title":"os.pardir()","slug":"os-pardir","link":"#os-pardir","children":[]},{"level":2,"title":"os.replace()","slug":"os-replace","link":"#os-replace","children":[]}],"relativePath":"python/1-基础教程/1.7os.md","filePath":"python/1-基础教程/1.7os.md"}'),l={name:"python/1-基础教程/1.7os.md"};function d(i,e,h,r,n,p){return s(),o("div",null,e[0]||(e[0]=[t('<h1 id="os-文件-目录方法" tabindex="-1">os 文件/目录方法 <a class="header-anchor" href="#os-文件-目录方法" aria-label="Permalink to &quot;os 文件/目录方法&quot;">​</a></h1><h2 id="os-access-path-mode" tabindex="-1">os.access(path, mode) <a class="header-anchor" href="#os-access-path-mode" aria-label="Permalink to &quot;os.access(path, mode)&quot;">​</a></h2><p>检验权限模式</p><h2 id="os-chdir-path" tabindex="-1">os.chdir(path) <a class="header-anchor" href="#os-chdir-path" aria-label="Permalink to &quot;os.chdir(path)&quot;">​</a></h2><p>改变当前工作目录</p><h2 id="os-chflags-path-flags" tabindex="-1">os.chflags(path, flags) <a class="header-anchor" href="#os-chflags-path-flags" aria-label="Permalink to &quot;os.chflags(path, flags)&quot;">​</a></h2><p>设置路径的标记为数字标记。</p><h2 id="os-chmod-path-mode" tabindex="-1">os.chmod(path, mode) <a class="header-anchor" href="#os-chmod-path-mode" aria-label="Permalink to &quot;os.chmod(path, mode)&quot;">​</a></h2><p>更改权限</p><h2 id="os-chown-path-uid-gid" tabindex="-1">os.chown(path, uid, gid) <a class="header-anchor" href="#os-chown-path-uid-gid" aria-label="Permalink to &quot;os.chown(path, uid, gid)&quot;">​</a></h2><p>更改文件所有者</p><h2 id="os-chroot-path" tabindex="-1">os.chroot(path) <a class="header-anchor" href="#os-chroot-path" aria-label="Permalink to &quot;os.chroot(path)&quot;">​</a></h2><p>改变当前进程的根目录</p><h2 id="os-close-fd" tabindex="-1">os.close(fd) <a class="header-anchor" href="#os-close-fd" aria-label="Permalink to &quot;os.close(fd)&quot;">​</a></h2><p>关闭文件描述符 fd</p><h2 id="os-closerange-fd-low-fd-high" tabindex="-1">os.closerange(fd_low, fd_high) <a class="header-anchor" href="#os-closerange-fd-low-fd-high" aria-label="Permalink to &quot;os.closerange(fd_low, fd_high)&quot;">​</a></h2><p>关闭所有文件描述符，从 fd_low (包含) 到 fd_high (不包含), 错误会忽略</p><h2 id="os-dup-fd" tabindex="-1">os.dup(fd) <a class="header-anchor" href="#os-dup-fd" aria-label="Permalink to &quot;os.dup(fd)&quot;">​</a></h2><p>复制文件描述符 fd</p><h2 id="os-dup2-fd-fd2" tabindex="-1">os.dup2(fd, fd2) <a class="header-anchor" href="#os-dup2-fd-fd2" aria-label="Permalink to &quot;os.dup2(fd, fd2)&quot;">​</a></h2><p>将一个文件描述符 fd 复制到另一个 fd2</p><h2 id="os-fchdir-fd" tabindex="-1">os.fchdir(fd) <a class="header-anchor" href="#os-fchdir-fd" aria-label="Permalink to &quot;os.fchdir(fd)&quot;">​</a></h2><p>通过文件描述符改变当前工作目录</p><h2 id="os-fchmod-fd-mode" tabindex="-1">os.fchmod(fd, mode) <a class="header-anchor" href="#os-fchmod-fd-mode" aria-label="Permalink to &quot;os.fchmod(fd, mode)&quot;">​</a></h2><p>改变一个文件的访问权限，该文件由参数 fd 指定，参数 mode 是 Unix 下的文件访问权限。</p><h2 id="os-fchown-fd-uid-gid" tabindex="-1">os.fchown(fd, uid, gid) <a class="header-anchor" href="#os-fchown-fd-uid-gid" aria-label="Permalink to &quot;os.fchown(fd, uid, gid)&quot;">​</a></h2><p>修改一个文件的所有权，这个函数修改一个文件的用户 ID 和用户组 ID，该文件由文件描述符 fd 指定。</p><h2 id="os-fdatasync-fd" tabindex="-1">os.fdatasync(fd) <a class="header-anchor" href="#os-fdatasync-fd" aria-label="Permalink to &quot;os.fdatasync(fd)&quot;">​</a></h2><p>强制将文件写入磁盘，该文件由文件描述符 fd 指定，但是不强制更新文件的状态信息。</p><h2 id="os-fdopen-fd-mode-bufsize" tabindex="-1">os.fdopen(fd[, mode[, bufsize]]) <a class="header-anchor" href="#os-fdopen-fd-mode-bufsize" aria-label="Permalink to &quot;os.fdopen(fd[, mode[, bufsize]])&quot;">​</a></h2><p>通过文件描述符 fd 创建一个文件对象，并返回这个文件对象</p><h2 id="os-fpathconf-fd-name" tabindex="-1">os.fpathconf(fd, name) <a class="header-anchor" href="#os-fpathconf-fd-name" aria-label="Permalink to &quot;os.fpathconf(fd, name)&quot;">​</a></h2><p>返回一个打开的文件的系统配置信息。name 为检索的系统配置的值，它也许是一个定义系统值的字符串，这些名字在很多标准中指定（POSIX.1, Unix 95, Unix 98, 和其它）。</p><h2 id="os-fstat-fd" tabindex="-1">os.fstat(fd) <a class="header-anchor" href="#os-fstat-fd" aria-label="Permalink to &quot;os.fstat(fd)&quot;">​</a></h2><p>返回文件描述符 fd 的状态，像 stat()。</p><h2 id="os-fstatvfs-fd" tabindex="-1">os.fstatvfs(fd) <a class="header-anchor" href="#os-fstatvfs-fd" aria-label="Permalink to &quot;os.fstatvfs(fd)&quot;">​</a></h2><p>返回包含文件描述符 fd 的文件的文件系统的信息，Python 3.3 相等于 statvfs()。</p><h2 id="os-fsync-fd" tabindex="-1">os.fsync(fd) <a class="header-anchor" href="#os-fsync-fd" aria-label="Permalink to &quot;os.fsync(fd)&quot;">​</a></h2><p>强制将文件描述符为 fd 的文件写入硬盘。</p><h2 id="os-ftruncate-fd-length" tabindex="-1">os.ftruncate(fd, length) <a class="header-anchor" href="#os-ftruncate-fd-length" aria-label="Permalink to &quot;os.ftruncate(fd, length)&quot;">​</a></h2><p>裁剪文件描述符 fd 对应的文件, 所以它最大不能超过文件大小。</p><h2 id="os-getcwd" tabindex="-1">os.getcwd() <a class="header-anchor" href="#os-getcwd" aria-label="Permalink to &quot;os.getcwd()&quot;">​</a></h2><p>返回当前工作目录</p><h2 id="os-getcwdb" tabindex="-1">os.getcwdb() <a class="header-anchor" href="#os-getcwdb" aria-label="Permalink to &quot;os.getcwdb()&quot;">​</a></h2><p>返回一个当前工作目录的 Unicode 对象</p><h2 id="os-isatty-fd" tabindex="-1">os.isatty(fd) <a class="header-anchor" href="#os-isatty-fd" aria-label="Permalink to &quot;os.isatty(fd)&quot;">​</a></h2><p>如果文件描述符 fd 是打开的，同时与 tty(-like)设备相连，则返回 true, 否则 False。</p><h2 id="os-lchflags-path-flags" tabindex="-1">os.lchflags(path, flags) <a class="header-anchor" href="#os-lchflags-path-flags" aria-label="Permalink to &quot;os.lchflags(path, flags)&quot;">​</a></h2><p>设置路径的标记为数字标记，类似 chflags()，但是没有软链接</p><h2 id="os-lchmod-path-mode" tabindex="-1">os.lchmod(path, mode) <a class="header-anchor" href="#os-lchmod-path-mode" aria-label="Permalink to &quot;os.lchmod(path, mode)&quot;">​</a></h2><p>修改连接文件权限</p><h2 id="os-lchown-path-uid-gid" tabindex="-1">os.lchown(path, uid, gid) <a class="header-anchor" href="#os-lchown-path-uid-gid" aria-label="Permalink to &quot;os.lchown(path, uid, gid)&quot;">​</a></h2><p>更改文件所有者，类似 chown，但是不追踪链接。</p><h2 id="os-link-src-dst" tabindex="-1">os.link(src, dst) <a class="header-anchor" href="#os-link-src-dst" aria-label="Permalink to &quot;os.link(src, dst)&quot;">​</a></h2><p>创建硬链接，名为参数 dst，指向参数 src</p><h2 id="os-listdir-path" tabindex="-1">os.listdir(path) <a class="header-anchor" href="#os-listdir-path" aria-label="Permalink to &quot;os.listdir(path)&quot;">​</a></h2><p>返回 path 指定的文件夹包含的文件或文件夹的名字的列表。</p><h2 id="os-lseek-fd-pos-how" tabindex="-1">os.lseek(fd, pos, how) <a class="header-anchor" href="#os-lseek-fd-pos-how" aria-label="Permalink to &quot;os.lseek(fd, pos, how)&quot;">​</a></h2><p>设置文件描述符 fd 当前位置为 pos, how 方式修改: SEEK_SET 或者 0 设置从文件开始的计算的 pos; SEEK_CUR 或者 1 则从当前位置计算; ## os.SEEK_END 或者 2 则从文件尾部开始. 在 unix，Windows 中有效</p><h2 id="os-lstat-path" tabindex="-1">os.lstat(path) <a class="header-anchor" href="#os-lstat-path" aria-label="Permalink to &quot;os.lstat(path)&quot;">​</a></h2><p>像 stat(),但是没有软链接</p><h2 id="os-major-device" tabindex="-1">os.major(device) <a class="header-anchor" href="#os-major-device" aria-label="Permalink to &quot;os.major(device)&quot;">​</a></h2><p>从原始的设备号中提取设备 major 号码 (使用 stat 中的 st_dev 或者 st_rdev field)。</p><h2 id="os-makedev-major-minor" tabindex="-1">os.makedev(major, minor) <a class="header-anchor" href="#os-makedev-major-minor" aria-label="Permalink to &quot;os.makedev(major, minor)&quot;">​</a></h2><p>以 major 和 minor 设备号组成一个原始设备号</p><h2 id="os-makedirs-path-mode" tabindex="-1">os.makedirs(path[, mode]) <a class="header-anchor" href="#os-makedirs-path-mode" aria-label="Permalink to &quot;os.makedirs(path[, mode])&quot;">​</a></h2><p>递归文件夹创建函数。像 mkdir(), 但创建的所有 intermediate-level 文件夹需要包含子文件夹。</p><h2 id="os-minor-device" tabindex="-1">os.minor(device) <a class="header-anchor" href="#os-minor-device" aria-label="Permalink to &quot;os.minor(device)&quot;">​</a></h2><p>从原始的设备号中提取设备 minor 号码 (使用 stat 中的 st_dev 或者 st_rdev field )。</p><h2 id="os-mkdir-path-mode" tabindex="-1">os.mkdir(path[, mode]) <a class="header-anchor" href="#os-mkdir-path-mode" aria-label="Permalink to &quot;os.mkdir(path[, mode])&quot;">​</a></h2><p>以数字 mode 的 mode 创建一个名为 path 的文件夹.默认的 mode 是 0777 (八进制)。</p><h2 id="os-mkfifo-path-mode" tabindex="-1">os.mkfifo(path[, mode]) <a class="header-anchor" href="#os-mkfifo-path-mode" aria-label="Permalink to &quot;os.mkfifo(path[, mode])&quot;">​</a></h2><p>创建命名管道，mode 为数字，默认为 0666 (八进制)</p><h2 id="os-mknod-filename-mode-0600-device" tabindex="-1">os.mknod(filename[, mode=0600, device]) <a class="header-anchor" href="#os-mknod-filename-mode-0600-device" aria-label="Permalink to &quot;os.mknod(filename[, mode=0600, device])&quot;">​</a></h2><p>创建一个名为 filename 文件系统节点（文件，设备特别文件或者命名 pipe）。</p><h2 id="os-open-file-flags-mode" tabindex="-1">os.open(file, flags[, mode]) <a class="header-anchor" href="#os-open-file-flags-mode" aria-label="Permalink to &quot;os.open(file, flags[, mode])&quot;">​</a></h2><p>打开一个文件，并且设置需要的打开选项，mode 参数是可选的</p><h2 id="os-openpty" tabindex="-1">os.openpty() <a class="header-anchor" href="#os-openpty" aria-label="Permalink to &quot;os.openpty()&quot;">​</a></h2><p>打开一个新的伪终端对。返回 pty 和 tty 的文件描述符。</p><h2 id="os-pathconf-path-name" tabindex="-1">os.pathconf(path, name) <a class="header-anchor" href="#os-pathconf-path-name" aria-label="Permalink to &quot;os.pathconf(path, name)&quot;">​</a></h2><p>返回相关文件的系统配置信息。</p><h2 id="os-pipe" tabindex="-1">os.pipe() <a class="header-anchor" href="#os-pipe" aria-label="Permalink to &quot;os.pipe()&quot;">​</a></h2><p>创建一个管道. 返回一对文件描述符(r, w) 分别为读和写</p><h2 id="os-popen-command-mode-bufsize" tabindex="-1">os.popen(command[, mode[, bufsize]]) <a class="header-anchor" href="#os-popen-command-mode-bufsize" aria-label="Permalink to &quot;os.popen(command[, mode[, bufsize]])&quot;">​</a></h2><p>从一个 command 打开一个管道</p><h2 id="os-read-fd-n" tabindex="-1">os.read(fd, n) <a class="header-anchor" href="#os-read-fd-n" aria-label="Permalink to &quot;os.read(fd, n)&quot;">​</a></h2><p>从文件描述符 fd 中读取最多 n 个字节，返回包含读取字节的字符串，文件描述符 fd 对应文件已达到结尾, 返回一个空字符串。</p><h2 id="os-readlink-path" tabindex="-1">os.readlink(path) <a class="header-anchor" href="#os-readlink-path" aria-label="Permalink to &quot;os.readlink(path)&quot;">​</a></h2><p>返回软链接所指向的文件</p><h2 id="os-remove-path" tabindex="-1">os.remove(path) <a class="header-anchor" href="#os-remove-path" aria-label="Permalink to &quot;os.remove(path)&quot;">​</a></h2><p>删除路径为 path 的文件。如果 path 是一个文件夹，将抛出 OSError; 查看下面的 rmdir()删除一个 directory。</p><h2 id="os-removedirs-path" tabindex="-1">os.removedirs(path) <a class="header-anchor" href="#os-removedirs-path" aria-label="Permalink to &quot;os.removedirs(path)&quot;">​</a></h2><p>递归删除目录。</p><h2 id="os-rename-src-dst" tabindex="-1">os.rename(src, dst) <a class="header-anchor" href="#os-rename-src-dst" aria-label="Permalink to &quot;os.rename(src, dst)&quot;">​</a></h2><p>重命名文件或目录，从 src 到 dst</p><h2 id="os-renames-old-new" tabindex="-1">os.renames(old, new) <a class="header-anchor" href="#os-renames-old-new" aria-label="Permalink to &quot;os.renames(old, new)&quot;">​</a></h2><p>递归地对目录进行更名，也可以对文件进行更名。</p><h2 id="os-rmdir-path" tabindex="-1">os.rmdir(path) <a class="header-anchor" href="#os-rmdir-path" aria-label="Permalink to &quot;os.rmdir(path)&quot;">​</a></h2><p>删除 path 指定的空目录，如果目录非空，则抛出一个 OSError 异常。</p><h2 id="os-stat-path" tabindex="-1">os.stat(path) <a class="header-anchor" href="#os-stat-path" aria-label="Permalink to &quot;os.stat(path)&quot;">​</a></h2><p>获取 path 指定的路径的信息，功能等同于 C API 中的 stat()系统调用。</p><h2 id="os-stat-float-times-newvalue" tabindex="-1">os.stat_float_times([newvalue]) <a class="header-anchor" href="#os-stat-float-times-newvalue" aria-label="Permalink to &quot;os.stat_float_times([newvalue])&quot;">​</a></h2><p>决定 stat_result 是否以 float 对象显示时间戳</p><h2 id="os-statvfs-path" tabindex="-1">os.statvfs(path) <a class="header-anchor" href="#os-statvfs-path" aria-label="Permalink to &quot;os.statvfs(path)&quot;">​</a></h2><p>获取指定路径的文件系统统计信息</p><h2 id="os-symlink-src-dst" tabindex="-1">os.symlink(src, dst) <a class="header-anchor" href="#os-symlink-src-dst" aria-label="Permalink to &quot;os.symlink(src, dst)&quot;">​</a></h2><p>创建一个软链接</p><h2 id="os-tcgetpgrp-fd" tabindex="-1">os.tcgetpgrp(fd) <a class="header-anchor" href="#os-tcgetpgrp-fd" aria-label="Permalink to &quot;os.tcgetpgrp(fd)&quot;">​</a></h2><p>返回与终端 fd（一个由## os.open()返回的打开的文件描述符）关联的进程组</p><h2 id="os-tcsetpgrp-fd-pg" tabindex="-1">os.tcsetpgrp(fd, pg) <a class="header-anchor" href="#os-tcsetpgrp-fd-pg" aria-label="Permalink to &quot;os.tcsetpgrp(fd, pg)&quot;">​</a></h2><p>设置与终端 fd（一个由## os.open()返回的打开的文件描述符）关联的进程组为 pg。</p><h2 id="os-ttyname-fd" tabindex="-1">os.ttyname(fd) <a class="header-anchor" href="#os-ttyname-fd" aria-label="Permalink to &quot;os.ttyname(fd)&quot;">​</a></h2><p>返回一个字符串，它表示与文件描述符 fd 关联的终端设备。如果 fd 没有与终端设备关联，则引发一个异常。</p><h2 id="os-unlink-path" tabindex="-1">os.unlink(path) <a class="header-anchor" href="#os-unlink-path" aria-label="Permalink to &quot;os.unlink(path)&quot;">​</a></h2><p>删除文件路径</p><h2 id="os-utime-path-times" tabindex="-1">os.utime(path, times) <a class="header-anchor" href="#os-utime-path-times" aria-label="Permalink to &quot;os.utime(path, times)&quot;">​</a></h2><p>返回指定的 path 文件的访问和修改的时间。</p><h2 id="os-walk-top-topdown-true-onerror-none-followlinks-false" tabindex="-1">os.walk(top[, topdown=True[, onerror=None[, followlinks=False]]]) <a class="header-anchor" href="#os-walk-top-topdown-true-onerror-none-followlinks-false" aria-label="Permalink to &quot;os.walk(top[, topdown=True[, onerror=None[, followlinks=False]]])&quot;">​</a></h2><p>输出在文件夹中的文件名通过在树中游走，向上或者向下。</p><h2 id="os-write-fd-str" tabindex="-1">os.write(fd, str) <a class="header-anchor" href="#os-write-fd-str" aria-label="Permalink to &quot;os.write(fd, str)&quot;">​</a></h2><p>写入字符串到文件描述符 fd 中. 返回实际写入的字符串长度</p><h2 id="os-path-模块" tabindex="-1">os.path 模块 <a class="header-anchor" href="#os-path-模块" aria-label="Permalink to &quot;os.path 模块&quot;">​</a></h2><p>获取文件的属性信息。</p><h2 id="os-pardir" tabindex="-1">os.pardir() <a class="header-anchor" href="#os-pardir" aria-label="Permalink to &quot;os.pardir()&quot;">​</a></h2><p>获取当前目录的父目录，以字符串形式显示目录名。</p><h2 id="os-replace" tabindex="-1">os.replace() <a class="header-anchor" href="#os-replace" aria-label="Permalink to &quot;os.replace()&quot;">​</a></h2><p>重命名文件或目录。</p>',127)]))}const m=a(l,[["render",d]]);export{c as __pageData,m as default};
