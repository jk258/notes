import{_ as s,c as t,o as n,V as e}from"./chunks/framework.jEbjPO8a.js";const u=JSON.parse('{"title":"基本语法","description":"","frontmatter":{},"headers":[{"level":2,"title":"python 保留字符","slug":"python-保留字符","link":"#python-保留字符","children":[]},{"level":2,"title":"行和缩进","slug":"行和缩进","link":"#行和缩进","children":[]},{"level":2,"title":"多行语句","slug":"多行语句","link":"#多行语句","children":[]},{"level":2,"title":"Python 引号","slug":"python-引号","link":"#python-引号","children":[]},{"level":2,"title":"Python 注释","slug":"python-注释","link":"#python-注释","children":[]},{"level":2,"title":"Python 空行","slug":"python-空行","link":"#python-空行","children":[]},{"level":2,"title":"等待用户输入(input)","slug":"等待用户输入-input","link":"#等待用户输入-input","children":[]},{"level":2,"title":"print 输出","slug":"print-输出","link":"#print-输出","children":[]}],"relativePath":"python/1-基础教程/1.1基本语法.md","filePath":"python/1-基础教程/1.1基本语法.md"}'),a={name:"python/1-基础教程/1.1基本语法.md"},i=e(`<h1 id="基本语法" tabindex="-1">基本语法 <a class="header-anchor" href="#基本语法" aria-label="Permalink to &quot;基本语法&quot;">​</a></h1><h2 id="python-保留字符" tabindex="-1">python 保留字符 <a class="header-anchor" href="#python-保留字符" aria-label="Permalink to &quot;python 保留字符&quot;">​</a></h2><table><thead><tr><th style="text-align:center;"></th><th style="text-align:center;"></th><th style="text-align:center;"></th></tr></thead><tbody><tr><td style="text-align:center;">and</td><td style="text-align:center;">exec</td><td style="text-align:center;">not</td></tr><tr><td style="text-align:center;">assert</td><td style="text-align:center;">finally</td><td style="text-align:center;">or</td></tr><tr><td style="text-align:center;">break</td><td style="text-align:center;">for</td><td style="text-align:center;">pass</td></tr><tr><td style="text-align:center;">class</td><td style="text-align:center;">from</td><td style="text-align:center;">print</td></tr><tr><td style="text-align:center;">continue</td><td style="text-align:center;">global</td><td style="text-align:center;">raise</td></tr><tr><td style="text-align:center;">def</td><td style="text-align:center;">if</td><td style="text-align:center;">return</td></tr><tr><td style="text-align:center;">del</td><td style="text-align:center;">import</td><td style="text-align:center;">try</td></tr><tr><td style="text-align:center;">elif</td><td style="text-align:center;">in</td><td style="text-align:center;">while</td></tr><tr><td style="text-align:center;">else</td><td style="text-align:center;">is</td><td style="text-align:center;">with</td></tr><tr><td style="text-align:center;">except</td><td style="text-align:center;">lambda</td><td style="text-align:center;">yield</td></tr></tbody></table><h2 id="行和缩进" tabindex="-1">行和缩进 <a class="header-anchor" href="#行和缩进" aria-label="Permalink to &quot;行和缩进&quot;">​</a></h2><p>学习 Python 与其他语言最大的区别就是，Python 的代码块不使用大括号 {} 来控制类，函数以及其他逻辑判断。python 最具特色的就是用缩进来写模块<br> 缩进的空白数量是可变的，但是所有代码块语句必须包含相同的缩进空白数量，这个必须严格执行</p><h2 id="多行语句" tabindex="-1">多行语句 <a class="header-anchor" href="#多行语句" aria-label="Permalink to &quot;多行语句&quot;">​</a></h2><p>Python 语句中一般以新行作为语句的结束符，但是我们可以使用斜杠（ \\）将一行的语句分为多行显示</p><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">total</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;item1&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;item2&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;item3&#39;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(total)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#item1item2item3</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="python-引号" tabindex="-1">Python 引号 <a class="header-anchor" href="#python-引号" aria-label="Permalink to &quot;Python 引号&quot;">​</a></h2><p>Python 可以使用引号( &#39; )、双引号( &quot; )、三引号( &#39;&#39;&#39; 或 &quot;&quot;&quot; ) 来表示字符串，引号的开始与结束必须是相同类型的<br> 其中三引号可以由多行组成，编写多行文本的快捷语法，常用于文档字符串，在文件的特定地点，被当做注释</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>word = &#39;word&#39;</span></span>
<span class="line"><span>sentence = &quot;这是一个句子。&quot;</span></span>
<span class="line"><span>paragraph = &quot;&quot;&quot;这是一个段落。</span></span>
<span class="line"><span>包含了多个语句&quot;&quot;&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="python-注释" tabindex="-1">Python 注释 <a class="header-anchor" href="#python-注释" aria-label="Permalink to &quot;Python 注释&quot;">​</a></h2><p>python 中单行注释采用 # 开头。</p><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 第一个注释</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, Python!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 第二个注释</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>python 中多行注释使用三个单引号 <code>&#39;&#39;&#39;</code> 或三个双引号 <code>&quot;&quot;&quot;</code></p><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">这是多行注释，使用单引号。</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">这是多行注释，使用单引号。</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">这是多行注释，使用单引号。</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">这是多行注释，使用双引号。</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">这是多行注释，使用双引号。</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">这是多行注释，使用双引号。</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="python-空行" tabindex="-1">Python 空行 <a class="header-anchor" href="#python-空行" aria-label="Permalink to &quot;Python 空行&quot;">​</a></h2><p>函数之间或类的方法之间用空行分隔，表示一段新的代码的开始。类和函数入口之间也用一行空行分隔，以突出函数入口的开始。</p><h2 id="等待用户输入-input" tabindex="-1">等待用户输入(input) <a class="header-anchor" href="#等待用户输入-input" aria-label="Permalink to &quot;等待用户输入(input)&quot;">​</a></h2><p>下面的程序执行后就会等待用户输入，按回车键后就会退出：</p><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;按下 enter 键退出，其他任意键显示...&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="print-输出" tabindex="-1">print 输出 <a class="header-anchor" href="#print-输出" aria-label="Permalink to &quot;print 输出&quot;">​</a></h2><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># hello world</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,23),l=[i];function p(r,h,d,o,c,k){return n(),t("div",null,l)}const g=s(a,[["render",p]]);export{u as __pageData,g as default};
