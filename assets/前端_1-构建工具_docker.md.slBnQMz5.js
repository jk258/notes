import{_ as e,c as a,o as s,V as n}from"./chunks/framework.BbAbY5cn.js";const b=JSON.parse('{"title":"docker","description":"","frontmatter":{},"headers":[{"level":2,"title":"docker镜像","slug":"docker镜像","link":"#docker镜像","children":[]},{"level":2,"title":"docker容器","slug":"docker容器","link":"#docker容器","children":[]},{"level":2,"title":"docker-compose","slug":"docker-compose","link":"#docker-compose","children":[]}],"relativePath":"前端/1-构建工具/docker.md","filePath":"前端/1-构建工具/docker.md"}'),i={name:"前端/1-构建工具/docker.md"},o=n(`<h1 id="docker" tabindex="-1">docker <a class="header-anchor" href="#docker" aria-label="Permalink to &quot;docker&quot;">​</a></h1><h2 id="docker镜像" tabindex="-1">docker镜像 <a class="header-anchor" href="#docker镜像" aria-label="Permalink to &quot;docker镜像&quot;">​</a></h2><p>查看镜像</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>docker images</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="docker容器" tabindex="-1">docker容器 <a class="header-anchor" href="#docker容器" aria-label="Permalink to &quot;docker容器&quot;">​</a></h2><p>查看容器</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>docker ps</span></span>
<span class="line"><span>docker ps -a</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>进入容器</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>docker exec -it [容器id] /bin/bash ||</span></span>
<span class="line"><span>docker exec -it [容器id] /bin/sh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="docker-compose" tabindex="-1">docker-compose <a class="header-anchor" href="#docker-compose" aria-label="Permalink to &quot;docker-compose&quot;">​</a></h2><p>后台启动</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>docker-compose up -d</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>停止并删除镜像</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>docker-compose down</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,14),r=[o];function c(d,p,l,t,h,u){return s(),a("div",null,r)}const m=e(i,[["render",c]]);export{b as __pageData,m as default};
